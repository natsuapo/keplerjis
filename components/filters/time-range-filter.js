"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timeRangeSliderFieldsSelector = timeRangeSliderFieldsSelector;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _timeRangeSlider = _interopRequireDefault(require("../common/time-range-slider"));

var _defaultSettings = require("../../constants/default-settings");

// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * TimeRangeFilter -> TimeRangeSlider -> RangeSlider
 */
function timeRangeSliderFieldsSelector(filter) {
  var hasUserFormat = typeof filter.timeFormat === 'string';
  var timeFormat = (hasUserFormat ? filter.timeFormat : filter.defaultTimeFormat) || _defaultSettings.DEFAULT_TIME_FORMAT;
  return {
    id: filter.id,
    domain: filter.domain,
    bins: filter.bins,
    value: filter.value,
    plotType: filter.plotType,
    lineChart: filter.lineChart,
    yAxis: filter.yAxis,
    step: filter.step,
    speed: filter.speed,
    histogram: filter.enlarged ? filter.enlargedHistogram : filter.histogram,
    isEnlarged: filter.enlarged,
    animationWindow: filter.animationWindow,
    isAnimating: filter.isAnimating,
    timezone: filter.timezone,
    timeFormat: timeFormat
  };
}

TimeRangeFilterFactory.deps = [_timeRangeSlider["default"]];

function TimeRangeFilterFactory(TimeRangeSlider) {
  var TimeRangeFilter = function TimeRangeFilter(_ref) {
    var filter = _ref.filter,
        setFilter = _ref.setFilter,
        isAnimatable = _ref.isAnimatable,
        toggleAnimation = _ref.toggleAnimation,
        hideTimeTitle = _ref.hideTimeTitle;
    return /*#__PURE__*/_react["default"].createElement(TimeRangeSlider, (0, _extends2["default"])({}, timeRangeSliderFieldsSelector(filter), {
      onChange: setFilter,
      toggleAnimation: toggleAnimation,
      isAnimatable: isAnimatable,
      hideTimeTitle: hideTimeTitle
    }));
  };

  return TimeRangeFilter;
}

var _default = TimeRangeFilterFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2ZpbHRlcnMvdGltZS1yYW5nZS1maWx0ZXIuanMiXSwibmFtZXMiOlsidGltZVJhbmdlU2xpZGVyRmllbGRzU2VsZWN0b3IiLCJmaWx0ZXIiLCJoYXNVc2VyRm9ybWF0IiwidGltZUZvcm1hdCIsImRlZmF1bHRUaW1lRm9ybWF0IiwiREVGQVVMVF9USU1FX0ZPUk1BVCIsImlkIiwiZG9tYWluIiwiYmlucyIsInZhbHVlIiwicGxvdFR5cGUiLCJsaW5lQ2hhcnQiLCJ5QXhpcyIsInN0ZXAiLCJzcGVlZCIsImhpc3RvZ3JhbSIsImVubGFyZ2VkIiwiZW5sYXJnZWRIaXN0b2dyYW0iLCJpc0VubGFyZ2VkIiwiYW5pbWF0aW9uV2luZG93IiwiaXNBbmltYXRpbmciLCJ0aW1lem9uZSIsIlRpbWVSYW5nZUZpbHRlckZhY3RvcnkiLCJkZXBzIiwiVGltZVJhbmdlU2xpZGVyRmFjdG9yeSIsIlRpbWVSYW5nZVNsaWRlciIsIlRpbWVSYW5nZUZpbHRlciIsInNldEZpbHRlciIsImlzQW5pbWF0YWJsZSIsInRvZ2dsZUFuaW1hdGlvbiIsImhpZGVUaW1lVGl0bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFDQTs7QUF0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBTUE7QUFDQTtBQUNBO0FBQ08sU0FBU0EsNkJBQVQsQ0FBdUNDLE1BQXZDLEVBQStDO0FBQ3BELE1BQU1DLGFBQWEsR0FBRyxPQUFPRCxNQUFNLENBQUNFLFVBQWQsS0FBNkIsUUFBbkQ7QUFDQSxNQUFNQSxVQUFVLEdBQ2QsQ0FBQ0QsYUFBYSxHQUFHRCxNQUFNLENBQUNFLFVBQVYsR0FBdUJGLE1BQU0sQ0FBQ0csaUJBQTVDLEtBQWtFQyxvQ0FEcEU7QUFHQSxTQUFPO0FBQ0xDLElBQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSyxFQUROO0FBRUxDLElBQUFBLE1BQU0sRUFBRU4sTUFBTSxDQUFDTSxNQUZWO0FBR0xDLElBQUFBLElBQUksRUFBRVAsTUFBTSxDQUFDTyxJQUhSO0FBSUxDLElBQUFBLEtBQUssRUFBRVIsTUFBTSxDQUFDUSxLQUpUO0FBS0xDLElBQUFBLFFBQVEsRUFBRVQsTUFBTSxDQUFDUyxRQUxaO0FBTUxDLElBQUFBLFNBQVMsRUFBRVYsTUFBTSxDQUFDVSxTQU5iO0FBT0xDLElBQUFBLEtBQUssRUFBRVgsTUFBTSxDQUFDVyxLQVBUO0FBUUxDLElBQUFBLElBQUksRUFBRVosTUFBTSxDQUFDWSxJQVJSO0FBU0xDLElBQUFBLEtBQUssRUFBRWIsTUFBTSxDQUFDYSxLQVRUO0FBVUxDLElBQUFBLFNBQVMsRUFBRWQsTUFBTSxDQUFDZSxRQUFQLEdBQWtCZixNQUFNLENBQUNnQixpQkFBekIsR0FBNkNoQixNQUFNLENBQUNjLFNBVjFEO0FBV0xHLElBQUFBLFVBQVUsRUFBRWpCLE1BQU0sQ0FBQ2UsUUFYZDtBQVlMRyxJQUFBQSxlQUFlLEVBQUVsQixNQUFNLENBQUNrQixlQVpuQjtBQWFMQyxJQUFBQSxXQUFXLEVBQUVuQixNQUFNLENBQUNtQixXQWJmO0FBY0xDLElBQUFBLFFBQVEsRUFBRXBCLE1BQU0sQ0FBQ29CLFFBZFo7QUFlTGxCLElBQUFBLFVBQVUsRUFBVkE7QUFmSyxHQUFQO0FBaUJEOztBQUVEbUIsc0JBQXNCLENBQUNDLElBQXZCLEdBQThCLENBQUNDLDJCQUFELENBQTlCOztBQUVBLFNBQVNGLHNCQUFULENBQWdDRyxlQUFoQyxFQUFpRDtBQUMvQyxNQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCO0FBQUEsUUFBRXpCLE1BQUYsUUFBRUEsTUFBRjtBQUFBLFFBQVUwQixTQUFWLFFBQVVBLFNBQVY7QUFBQSxRQUFxQkMsWUFBckIsUUFBcUJBLFlBQXJCO0FBQUEsUUFBbUNDLGVBQW5DLFFBQW1DQSxlQUFuQztBQUFBLFFBQW9EQyxhQUFwRCxRQUFvREEsYUFBcEQ7QUFBQSx3QkFDdEIsZ0NBQUMsZUFBRCxnQ0FDTTlCLDZCQUE2QixDQUFDQyxNQUFELENBRG5DO0FBRUUsTUFBQSxRQUFRLEVBQUUwQixTQUZaO0FBR0UsTUFBQSxlQUFlLEVBQUVFLGVBSG5CO0FBSUUsTUFBQSxZQUFZLEVBQUVELFlBSmhCO0FBS0UsTUFBQSxhQUFhLEVBQUVFO0FBTGpCLE9BRHNCO0FBQUEsR0FBeEI7O0FBVUEsU0FBT0osZUFBUDtBQUNEOztlQUVjSixzQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMiBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGltZVJhbmdlU2xpZGVyRmFjdG9yeSBmcm9tICdjb21wb25lbnRzL2NvbW1vbi90aW1lLXJhbmdlLXNsaWRlcic7XG5pbXBvcnQge0RFRkFVTFRfVElNRV9GT1JNQVR9IGZyb20gJ2NvbnN0YW50cy9kZWZhdWx0LXNldHRpbmdzJztcblxuLypcbiAqIFRpbWVSYW5nZUZpbHRlciAtPiBUaW1lUmFuZ2VTbGlkZXIgLT4gUmFuZ2VTbGlkZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRpbWVSYW5nZVNsaWRlckZpZWxkc1NlbGVjdG9yKGZpbHRlcikge1xuICBjb25zdCBoYXNVc2VyRm9ybWF0ID0gdHlwZW9mIGZpbHRlci50aW1lRm9ybWF0ID09PSAnc3RyaW5nJztcbiAgY29uc3QgdGltZUZvcm1hdCA9XG4gICAgKGhhc1VzZXJGb3JtYXQgPyBmaWx0ZXIudGltZUZvcm1hdCA6IGZpbHRlci5kZWZhdWx0VGltZUZvcm1hdCkgfHwgREVGQVVMVF9USU1FX0ZPUk1BVDtcblxuICByZXR1cm4ge1xuICAgIGlkOiBmaWx0ZXIuaWQsXG4gICAgZG9tYWluOiBmaWx0ZXIuZG9tYWluLFxuICAgIGJpbnM6IGZpbHRlci5iaW5zLFxuICAgIHZhbHVlOiBmaWx0ZXIudmFsdWUsXG4gICAgcGxvdFR5cGU6IGZpbHRlci5wbG90VHlwZSxcbiAgICBsaW5lQ2hhcnQ6IGZpbHRlci5saW5lQ2hhcnQsXG4gICAgeUF4aXM6IGZpbHRlci55QXhpcyxcbiAgICBzdGVwOiBmaWx0ZXIuc3RlcCxcbiAgICBzcGVlZDogZmlsdGVyLnNwZWVkLFxuICAgIGhpc3RvZ3JhbTogZmlsdGVyLmVubGFyZ2VkID8gZmlsdGVyLmVubGFyZ2VkSGlzdG9ncmFtIDogZmlsdGVyLmhpc3RvZ3JhbSxcbiAgICBpc0VubGFyZ2VkOiBmaWx0ZXIuZW5sYXJnZWQsXG4gICAgYW5pbWF0aW9uV2luZG93OiBmaWx0ZXIuYW5pbWF0aW9uV2luZG93LFxuICAgIGlzQW5pbWF0aW5nOiBmaWx0ZXIuaXNBbmltYXRpbmcsXG4gICAgdGltZXpvbmU6IGZpbHRlci50aW1lem9uZSxcbiAgICB0aW1lRm9ybWF0XG4gIH07XG59XG5cblRpbWVSYW5nZUZpbHRlckZhY3RvcnkuZGVwcyA9IFtUaW1lUmFuZ2VTbGlkZXJGYWN0b3J5XTtcblxuZnVuY3Rpb24gVGltZVJhbmdlRmlsdGVyRmFjdG9yeShUaW1lUmFuZ2VTbGlkZXIpIHtcbiAgY29uc3QgVGltZVJhbmdlRmlsdGVyID0gKHtmaWx0ZXIsIHNldEZpbHRlciwgaXNBbmltYXRhYmxlLCB0b2dnbGVBbmltYXRpb24sIGhpZGVUaW1lVGl0bGV9KSA9PiAoXG4gICAgPFRpbWVSYW5nZVNsaWRlclxuICAgICAgey4uLnRpbWVSYW5nZVNsaWRlckZpZWxkc1NlbGVjdG9yKGZpbHRlcil9XG4gICAgICBvbkNoYW5nZT17c2V0RmlsdGVyfVxuICAgICAgdG9nZ2xlQW5pbWF0aW9uPXt0b2dnbGVBbmltYXRpb259XG4gICAgICBpc0FuaW1hdGFibGU9e2lzQW5pbWF0YWJsZX1cbiAgICAgIGhpZGVUaW1lVGl0bGU9e2hpZGVUaW1lVGl0bGV9XG4gICAgLz5cbiAgKTtcblxuICByZXR1cm4gVGltZVJhbmdlRmlsdGVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lUmFuZ2VGaWx0ZXJGYWN0b3J5O1xuIl19