"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = TimeRangeSliderFactory;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = _interopRequireDefault(require("lodash.throttle"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _rangeSlider = _interopRequireDefault(require("./range-slider"));

var _timeSliderMarker = _interopRequireDefault(require("./time-slider-marker"));

var _playbackControls = _interopRequireDefault(require("./animation-control/playback-controls"));

var _timeRangeSliderTimeTitle = _interopRequireDefault(require("./time-range-slider-time-title"));

var _templateObject;

var animationControlWidth = 176;

var StyledSliderContainer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  align-items: flex-end;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding-left: ", "px;\n\n  .timeline-container .kg-slider {\n    display: none;\n  }\n\n  .playback-controls {\n    margin-left: 22px;\n  }\n"])), function (props) {
  return props.isEnlarged ? 24 : 0;
});

TimeRangeSliderFactory.deps = [_playbackControls["default"], _rangeSlider["default"], _timeSliderMarker["default"], _timeRangeSliderTimeTitle["default"]];

function TimeRangeSliderFactory(PlaybackControls, RangeSlider, TimeSliderMarker, TimeRangeSliderTimeTitle) {
  var TimeRangeSlider = function TimeRangeSlider(props) {
    var domain = props.domain,
        value = props.value,
        isEnlarged = props.isEnlarged,
        hideTimeTitle = props.hideTimeTitle,
        isAnimating = props.isAnimating,
        resetAnimation = props.resetAnimation,
        timeFormat = props.timeFormat,
        timezone = props.timezone,
        histogram = props.histogram,
        plotType = props.plotType,
        lineChart = props.lineChart,
        step = props.step,
        isAnimatable = props.isAnimatable,
        speed = props.speed,
        animationWindow = props.animationWindow,
        updateAnimationSpeed = props.updateAnimationSpeed,
        setFilterAnimationWindow = props.setFilterAnimationWindow,
        toggleAnimation = props.toggleAnimation,
        onChange = props.onChange;
    var throttledOnchange = (0, _react.useMemo)(function () {
      return (0, _lodash["default"])(onChange, 20);
    }, [onChange]);
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "time-range-slider"
    }, !hideTimeTitle ? /*#__PURE__*/_react["default"].createElement("div", {
      className: "time-range-slider__title",
      style: {
        width: isEnlarged ? "calc(100% - ".concat(animationControlWidth, "px)") : '100%'
      }
    }, /*#__PURE__*/_react["default"].createElement(TimeRangeSliderTimeTitle, {
      timeFormat: timeFormat,
      timezone: timezone,
      value: value,
      isEnlarged: isEnlarged
    })) : null, /*#__PURE__*/_react["default"].createElement(StyledSliderContainer, {
      className: "time-range-slider__container",
      isEnlarged: isEnlarged
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "timeline-container",
      style: {
        width: isEnlarged ? "calc(100% - ".concat(animationControlWidth, "px)") : '100%'
      }
    }, /*#__PURE__*/_react["default"].createElement(RangeSlider, {
      range: domain,
      value0: value[0],
      value1: value[1],
      histogram: histogram,
      lineChart: lineChart,
      plotType: plotType,
      isEnlarged: isEnlarged,
      showInput: false,
      step: step,
      onChange: throttledOnchange,
      xAxis: TimeSliderMarker,
      timezone: timezone,
      timeFormat: timeFormat
    })), isEnlarged ? /*#__PURE__*/_react["default"].createElement(PlaybackControls, {
      isAnimatable: isAnimatable,
      width: animationControlWidth,
      speed: speed,
      animationWindow: animationWindow,
      updateAnimationSpeed: updateAnimationSpeed,
      setFilterAnimationWindow: setFilterAnimationWindow,
      pauseAnimation: toggleAnimation,
      resetAnimation: resetAnimation,
      isAnimating: isAnimating,
      startAnimation: toggleAnimation
    }) : null));
  };

  TimeRangeSlider.propTypes = {
    onChange: _propTypes["default"].func.isRequired,
    domain: _propTypes["default"].arrayOf(_propTypes["default"].number),
    value: _propTypes["default"].arrayOf(_propTypes["default"].number).isRequired,
    step: _propTypes["default"].number.isRequired,
    plotType: _propTypes["default"].string,
    histogram: _propTypes["default"].arrayOf(_propTypes["default"].any),
    lineChart: _propTypes["default"].object,
    toggleAnimation: _propTypes["default"].func.isRequired,
    exportAnimation: _propTypes["default"].func,
    isAnimatable: _propTypes["default"].bool,
    isEnlarged: _propTypes["default"].bool,
    speed: _propTypes["default"].number,
    timeFormat: _propTypes["default"].string,
    timezone: _propTypes["default"].string,
    hideTimeTitle: _propTypes["default"].bool
  };
  return /*#__PURE__*/_react["default"].memo(TimeRangeSlider);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,