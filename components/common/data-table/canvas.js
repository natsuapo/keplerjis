"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

/*
    ScrollSync works by getting a callback about the dom elements scroll amount
    and then using that to pass into how much to scroll all child components,
    it works great!

    Except... Because scrolling is managed by a separate thread, and JavaScript
    is only periodically notified of the updated position, there's some latency
    issues with this.

    We can hack around this by using a niche property of canvas that removes the
    delay in scroll event firing! Easiest way to reproduce: enable "Trace React updates"
    in React DevTools (it works by overlaying a viewport-wide canvas over the document).
  */
var _default = _styledComponents["default"].canvas(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  height: 100%;\n  left: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  width: 100%;\n"])));

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9kYXRhLXRhYmxlL2NhbnZhcy5qcyJdLCJuYW1lcyI6WyJzdHlsZWQiLCJjYW52YXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBb0JBOzs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7ZUFDZUEsNkJBQU9DLE0iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMjIgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuLypcbiAgICBTY3JvbGxTeW5jIHdvcmtzIGJ5IGdldHRpbmcgYSBjYWxsYmFjayBhYm91dCB0aGUgZG9tIGVsZW1lbnRzIHNjcm9sbCBhbW91bnRcbiAgICBhbmQgdGhlbiB1c2luZyB0aGF0IHRvIHBhc3MgaW50byBob3cgbXVjaCB0byBzY3JvbGwgYWxsIGNoaWxkIGNvbXBvbmVudHMsXG4gICAgaXQgd29ya3MgZ3JlYXQhXG5cbiAgICBFeGNlcHQuLi4gQmVjYXVzZSBzY3JvbGxpbmcgaXMgbWFuYWdlZCBieSBhIHNlcGFyYXRlIHRocmVhZCwgYW5kIEphdmFTY3JpcHRcbiAgICBpcyBvbmx5IHBlcmlvZGljYWxseSBub3RpZmllZCBvZiB0aGUgdXBkYXRlZCBwb3NpdGlvbiwgdGhlcmUncyBzb21lIGxhdGVuY3lcbiAgICBpc3N1ZXMgd2l0aCB0aGlzLlxuXG4gICAgV2UgY2FuIGhhY2sgYXJvdW5kIHRoaXMgYnkgdXNpbmcgYSBuaWNoZSBwcm9wZXJ0eSBvZiBjYW52YXMgdGhhdCByZW1vdmVzIHRoZVxuICAgIGRlbGF5IGluIHNjcm9sbCBldmVudCBmaXJpbmchIEVhc2llc3Qgd2F5IHRvIHJlcHJvZHVjZTogZW5hYmxlIFwiVHJhY2UgUmVhY3QgdXBkYXRlc1wiXG4gICAgaW4gUmVhY3QgRGV2VG9vbHMgKGl0IHdvcmtzIGJ5IG92ZXJsYXlpbmcgYSB2aWV3cG9ydC13aWRlIGNhbnZhcyBvdmVyIHRoZSBkb2N1bWVudCkuXG4gICovXG5leHBvcnQgZGVmYXVsdCBzdHlsZWQuY2FudmFzYFxuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG5gO1xuIl19