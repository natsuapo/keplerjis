"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.floorTime = exports.timeRangeFilter = exports.timeFilter = exports.dateFilter = exports.strftimeFloat = exports.dataframeFilterWeekday = exports.isWeekday = exports.isDayOff = exports.isJapaneseHoliday = void 0;

var JapaneseHolidays = _interopRequireWildcard(require("japanese-holidays"));

var _dataUtils = require("./data-utils");

var _momentTimezone = _interopRequireDefault(require("moment-timezone"));

// Copyright (c) 2022 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// require('japanese-holidays');
var isJapaneseHoliday = function isJapaneseHoliday(date) {
  return JapaneseHolidays.isHoliday(date);
};

exports.isJapaneseHoliday = isJapaneseHoliday;

var isDayOff = function isDayOff(date) {
  var removeHoliday = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return !removeHoliday ? [0, 6].includes(date.getDayOfWeek) : isJapaneseHoliday(date) ? true : [0, 6].includes(date.getDayOfWeek);
};

exports.isDayOff = isDayOff;

var isWeekday = function isWeekday(date) {
  var removeHoliday = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return !isDayOff(date, removeHoliday);
};

exports.isWeekday = isWeekday;

var dataframeFilterWeekday = function dataframeFilterWeekday(df) {
  var removeHoliday = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return df.map();
}; //convert float time to timestring


exports.dataframeFilterWeekday = dataframeFilterWeekday;

var strftimeFloat = function strftimeFloat(date, format) {
  new Date(date);
}; //first filter date:


exports.strftimeFloat = strftimeFloat;

var dateFilter = function dateFilter(date, dow, daterange, removeholidayFlag) {
  date = new Date(date);

  if (daterange) {
    if (date < daterange[0] || date > daterange[1]) {
      return false;
    }
  }

  if (dow) {
    if (!dow.includes(date.getDay())) {
      return false;
    }
  }

  if (removeholidayFlag) {
    if (!isJapaneseHoliday(date)) {
      return false;
    }
  }

  return true;
}; //how to solve time shifting?


exports.dateFilter = dateFilter;

var timeFilter = function timeFilter(time, timeRange) {
  var timeWithoutDate = (0, _momentTimezone["default"])((0, _momentTimezone["default"])(time).format('LTS'), 'HH:mm:ss');
  var startTime = (0, _momentTimezone["default"])(timeRange[0], 'HH:mm:ss');
  var endTime = (0, _momentTimezone["default"])(timeRange[1], 'HH:mm:ss');
  return startTime.isBefore(timeWithoutDate) && endTime.isAfter(timeWithoutDate);
}; // 23:00 ~ 4:00 => 23:55 ~ 3:55 // 4:00 ~ 23:00 => 5:00 ~ 22:00


exports.timeFilter = timeFilter;

var timeRangeFilter = function timeRangeFilter(targetTimeRange, timeRange) {
  console.log('try time range filter');
  return (0, _momentTimezone["default"])((0, _momentTimezone["default"])(targetTimeRange[0]).format('LTS')) >= (0, _momentTimezone["default"])((0, _momentTimezone["default"])(timeRange[0]).format('LTS')) && (0, _momentTimezone["default"])((0, _momentTimezone["default"])(targetTimeRange[1]).format('LTS')) <= (0, _momentTimezone["default"])((0, _momentTimezone["default"])(timeRange[1]).format('LTS'));
};

exports.timeRangeFilter = timeRangeFilter;

var floorTime = function floorTime(date, dateformat, minute_unit) {
  // console.log('datetime formatter')
  date = new Date(date);
  var out_date = Math.floor(date / (1000 * 60 * minute_unit)) * 1000 * 60 * minute_unit;
  return dateformat === 'X' ? out_date : (0, _dataUtils.datetimeFormatter)(null)(dateformat)(out_date);
}; // export const strptime


exports.floorTime = floorTime;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,